

f(x)= a+ 2b + 3c + 4d -30 ( minimize)

step 1:
	No of chromosomes in population is 6.   							// N=6
	then we generate random value of gene a,b,c,d for6 chromosomes,

															chromosme=[np.random.randInt(0,30), np.random.randInt(0,30), np.random.randInt(0,30), np.random.randInt (0,30) for i in range(N)]

															chromosome=[]
															for i in range(6):
																a=np.random.randInt(0,30)
																b=
																c=
																d=
																chromosme.append([a,b,c,d])




	chromosme[1]=[a:b:c:d]=[ 12:05:23:08]
	chromosme[2]=[a:b:c:d]=[ 12:05:23:08]
	chromosme[3]=[a:b:c:d]=[ 12:05:23:08]
	chromosme[4]=[a:b:c:d]=[ 12:05:23:08]
	chromosme[5]=[a:b:c:d]=[ 12:05:23:08]
	chromosme[6]=[a:b:c:d]=[ 20:05:17:01]

step 2:
	F_obj[1]= abs( 12 + 2*05 + 3*23 + 4* 08- 30)       (similarly for all in 1 to 6)
																			
																		//	F_obj=[abs(30 -chromosome[i][0] - 2 * chromosome[i][1]- 3*chromosome[i][2] - 4*chromosome[i][3] )  for i in range(n) ]

	

step 3: selection : The fittest chromosme having higer probability to be selected for next generation.

	Fitness[1]=1/( 1+ F_obj[1])   (similarly for all in 1 to 6)    
																	    //  Fitness= [ 1/ 1+ F_Obj[i] for i in range(n)]

	Total=Fitness[1]+ Fitness[2]+Fitness[3]+Fitness[4]+Fitness[5]+Fitness[6]     //   Total = sum(Fitness)

	Calculate Respective Probability :-
										P[1]= Fitness[1]/ Total      (similarly for all in 1 to 6)    // P=[Fitness[i]/ Total for i in range(6)]

step 4: Selection is performedusing roulette wheel
		It takes cumulative probability value for individual chromosomes..
																			//	c=[0]
																			//	for i in range(6):
																			//		c.append(c[-1]+p[i])	

		C[0]=0
		C[1]=P[1]  									= 0.1254
		C[2]=P[1]+P[2]  							= 0.2710
		C[3]=P[1]+P[2]+P[3]							= 0.4118
		C[4]=P[1]+P[2]+P[3]+P[4]					= 0.6639
		C[5]=P[1]+P[2]+P[3]+P[4]+P[5]				= 0.7882
		C[6]=P[1]+P[2]+P[3]+P[4]+P[5]+P[6]			= 1.0

		Having calculated the cummulative probability of selection process using roulette wheel can be done.
		The process is to generate random number R in the range 0-1 as follows.

		R[1]= 0.201							R=[np.random.random() for i in range(6)]
		R[2]= 0.284  						print(R)
		R[3]= 0.099
		R[4]= 0.822
		R[5]= 0.398
		R[6]= 0.501

		new_ chromosome [1]= if random number R[1] is greater than C[1] and smaller than C[2] then select chromosome[2] 
		as a chromosome in the new population for next generation. if it lies between C[2] and C[3] then select chromosome[3] and so on..


		new_ chromosome [2]= if random number R[2] is greater than C[1] and smaller than C[2] then select chromosome[2] 
		as a chromosome in the new population for next generation. if it lies between C[2] and C[3] then select chromosome[3] and so on..


		new_ chromosome [3]= if random number R[3] is greater than C[1] and smaller than C[2] then select chromosome[2] 
		as a chromosome in the new population for next generation. if it lies between C[2] and C[3] then select chromosome[3] and so on..

															new_chromosome=[]
															for i in range(6):
																for j in range(6):
																	if(R[i] < c[j]):
																		new_chromosme.append(chromosome[j])
																		break
															print(new_chromosome)



		new_chromosome[1]=Chromosome[2]      
		new_chromosome[2]=Chromosome[3]
 		new_chromosome[3]=Chromosome[1]
		new_chromosome[4]=Chromosome[6]
		new_chromosome[5]=Chromosome[3]
		new_chromosome[6]=Chromosome[4]



		In this example, we use one-cut point , i.e. randomly select a position in the parent chromosome then exchanging sub-chromosome.
		Parenr chromosome which will mate randomly selected 

Step 5:
		chromosome is controlled using cross-over rate.
		chromosme k will be selected as a parent if R[k] < pc. Suppose we set the crossover rate is 25% , then chromosome
		number k will be selected for crossover if random generated value for chromosome k below 0.25. The process is as follows:
		First we generate a random number R as the number of population.

		R[1]=0.191
		R[2]=0.259
		R[3]=0.760
		R[4]=0.006
		R[5]=0.159
		R[6]=0.340

			K=0
			while(k<population):
				//R[k]=random(0,1)
				if(R[k]< pc) then
					select Chromosome[k] as parent 
				k=k+1


		For random number R above, parents are Chromosome[1], Chromosome[4] and chromosome[5] will be selected for crossover..



		C[1]=1
		C[2]=1
		C[3]=2

		Then for first crossver, second crossover and third crossover .
		Parent's gens will be cut at gen number 1, gen number 2=1 and gen number 3 respectively . e.g.

		Chromosome[1] =	Chromosome[1] >< Chromosome[4]
					  = [02 : 21 : 18 : 03 ] >< [20 : 05 : 17 : 01]
					  = [02 : 05 : 17 : 01 ]
		Chromosme[4]  = Chromosme[4] >< Chromosome[1]
					  = [10: 04 : 13 : 14]  >< [02: 21 : 18 :03]
					  = [10: 04 : 18 : 03]

		Thus Chromsosome population after experiencing a cross over process..
		Chromosome[1]=


	Step 6 : Mutation.


	Number of chromosomes that have mutations in a population is determined by the mutation_rate parameter. 
	Mutation process is done by replacing the gen at random position with a new value.
	the process is as follows -- first we must calculate the total length of gen of the population.
	In this case the total length of gen is 
		total_gen = number_of_gen_in_chromosme * no of population
				  = 4 * 6




		Suppose generation of random number yield 12 and 18 then the chromosome which have 
		mutation are Chromosme number 3 gen number 4 and Chromosome 5 gen number 2, The 
		Value of mutated gens at mutation point is replaced by a random number between 0-30.
		Suppose generated random number are 2 and 5 then Chromosome composition after mutation are :

		Chromosome[1]= [02 :05 :17 :01] ( no change)
		Chromosome[2]= [10 :04 :13 :14] ( no change)
		Chromosome[3]= [12 :05 :18 :03 ( earlier was __)] ( change last gen)
		Chromosome[4]= [      ]
		Chromosome[5]=
		Chromosome[6]=



		these new chromose will undergo 
		chromsomes such as evolution selection, crossover and mutation and at the end if possible 
		Chromosome=[07: 05: 03 :01]
		a=7
		b=5
		c=3
		d=1
